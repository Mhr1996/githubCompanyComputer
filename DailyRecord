##### 1.数组
		splice(index,1)   方法向/从数组中添加/删除项目，然后返回被删除的项目。
		join  			将数组转换为字符串
		split 			方法用于把一个字符串分割成字符串数组。
		sort  			方法用于对数组的元素进行排序。
		unshift() 		方法可向数组的开头添加一个或更多元素，并返回新的长度。
		
		set			   set对象是值的集合,元素只会出现一次,即Set中的元素是唯一的.
			var set = new Set([1,2,3,4,4,3,2,1]) //数组转换set对象
			set //{1,2,3,4}
			//方法一
			Array.from(set) //[1,2,3,4]
##### 1.2 字符串
		indexOf() 		方法可返回某个指定的字符串值在字符串中首次出现的位置。
##### 2.提交图片
		<up-img-ios @uploadIos="uploadIos"></up-img-ios>
		import upload from "./components/upload";
		
		components: {
			upload
		},
		methods:{
			uploadIos(e) {
				this.imgs=e;
			},
			submit(){
				this.imgs.join()
			}
		}
##### 3.tab/头部切换
		<div :class="{'active':isActive==index}" 
			v-for="(g,index) of type" 
			:key="index"
			@click="isActive=index">
				{{g.name}}
		</div>

		isActive:'0',
		type:[{name: '48V'}, {name: '60V'} ]
##### 4.下拉列表
		import loadMore from '@/components/loadMore.vue'
		import { devOps } from '@/api'
		
		<load-more :Request="devOps" @getList="getList">
			<div class="p12 cgf m15 br oh" v-for="(g,index) of orderList" :key="index">
				
			</div>
		</load-more>
		
		data(){
			return{
				orderList: [],
				devOps: devOps
			}
		},
		components:{
			loadMore
		},
		methods:{
			getList(list){
				this.orderList=list;
			}
		}
##### 5.询问
		let vis=this;
	    vis.$dialog.confirm({
			title: '提示',
			message: '询问？'
		}).then(() => {
		  	
		}).catch(() => {});
##### 6.选择器/下拉框
		<van-popup v-model="sltShow" position="bottom">
        	<van-picker :columns="sltList" 
				@confirm="onChange" 
				@cancel="cancelH" 
				value-key="agent_role" 
				show-toolbar/>
		</van-popup>
		<script>
			{
				sltList:[],
				sltShow:false,
				sltedName:'',
                sltedActive: '' //选择的级别
            }
            onChange(value, index) {
                this.sltedName=value.agent_role;
                this.sltedActive=value.level;
                this.sltShow=false;
            },
            cancelH(){
                this.sltShow=false;
            }
		</script>
		
##### 7.地图
		<tmap :markerIcon="markerIcon" :marker="mapMarker" :center="center" ref="oMap" :locationImg="locationImg">
			//内容
		</tmap>

		import Tmap from '@/components/tmap'

		data(){
			return {
				markerIcon: require("@/assets/imgs/icon1.png"),
				locationImg: require("@/assets/imgs/ic43.png"),//中心点图标
				mapMarker: [
					// {
					// 	// 标注点ID
					// 	id: 1,
					// 	// 标注点名称
					// 	name: "汤包",
					// 	// 标注点经纬度
					// 	lat: "22.993054",
					// 	lng: "113.707691",
					// 	// 标注点点击事件
					// 	f: () => {
					// 		console.log(1);
					// 	}
				 //    },
				],
				center: {}
			}
		}

		vis.$refs['oMap'].init();

		rd.forEach((item, index) => {
		    item.f=(item)=>{
		        vis.clickDevice=item;
		    }
		})
##### 8.navigation/导航
		if (vis.scanSource==2) {
            window.location.href = `https://apis.map.qq.com/tools/poimarker?type=0&marker=coord:${ cm.lat },${ cm.lng };title:${ cm.name };addr:${ cm.address }&key=N6RBZ-AJN35-AACI2-Q2ICF-HYV6O-JRBBZ&referer=myapp`;
        }else{
            wx.openLocation({
                latitude: cm.lat*1, // 纬度，浮点数，范围为90 ~ -90
                longitude: cm.lng*1, // 经度，浮点数，范围为180 ~ -180。
                name: cm.name, // 位置名
                address: cm.address, // 地址详情说明
                scale: 14// 地图缩放级别,整形值,范围从1~28。默认为最大
            });
        }
##### 10.微信支付
        WeixinJSBridge.invoke(
            'getBrandWCPayRequest', {
                appId: rd.appId,     //公众号名称，由商户传入     
                timeStamp: rd.timeStamp,         //时间戳，自1970年以来的秒数     
                nonceStr: rd.nonceStr, //随机串     
                package: rd.package,     
                signType: rd.signType,         //微信签名方式：     
                paySign: rd.paySign //微信签名 
            },
            function(jso){
                if(jso.err_msg == "get_brand_wcpay_request:ok"){
                    vis.stateOff=true;
                }else{
                    vis.$toast.fail("支付失败，请重新支付！");
                }
            }
        );
##### 11.
        go(){
			let vis=this;
			vis.$router.push({
				path:'',
				query:{id: vis.id}
			})
		}
##### 12
		vis.$toast.loading({duration:0, forbidClick:true, overlay:true, loadingType:'spinner', message:'加载中...'});

		// 持续展示
		vis.$toast({duration: 0, forbidClick: true, message: 'xxx'});
		setTimeout(()=>{ vis.$toast.clear(); vis.$router.go(-1) },3000)
##### 13. 扫一扫
		getTicket({api_name:'getTicket'}).then(res=>{
            if(res.code==1){
            	let timestamp= (new Date().getTime() / 1000).toFixed(0)
                ,nonceStr=Math.random().toString(36).substr(2),
                ticket=vis.$tool.wx_js(res.data.ticket,timestamp,nonceStr);

                wx.config({
                    debug: false, // 开启调试模式,调用的所有api的返回值会在客户端//alert出来，若要查  看传入的参数，可以在pc端打开，参数信息会通过log打出，仅在pc端时才会打印。
                    appId: '', // 必填，公众号的唯一标识
                    timestamp: timestamp, // 必填，生成签名的时间戳
                    nonceStr:  nonceStr, // 必填，生成签名的随机串
                    signature: ticket ,// 必填，签名，见附录1
                    jsApiList: [
                        'scanQRCode',
                        'getLocation',
                        'openLocation'
                    ] //    必填，需要使用的JS接口列表，所有JS接口列表见附录2
                });

                wx.ready(()=>{
                    wx.scanQRCode({
	                    needResult: 1, // 默认为0，扫描结果由微信处理，1则直接返回扫描结果，
	                    scanType: ["qrCode","barCode"], // 可以指定扫二维码还是一维码，默认二者都有
	                    success: function (ret) {
	                    	console.log(ret.resultStr)
	                    },
	                    complete(){
	                        if(this.scanner_onOff){
	                            WeixinJSBridge.call('closeWindow');
	                        }
	                    },
	                    error:function(err){
	                        alert(JSON.stringify(err));
	                    },
	                });
                })
            }else{
                vis.$toast(res.msg)
            }
        })
##### 14.设置分享出去的url 不一定是当前url
	wx.ready(()=>{
	        // 2. 分享接口
	        // 2.1 监听“分享给朋友”，按钮点击、自定义分享内容及分享结果接口
		wx.onMenuShareAppMessage({
			title: '一起加入新界零售吧！', // 分享标题
			desc: '', // 分享描述
			link: `${baseApi}/h5/vue/#/personal/invite/join?id=${vis.userId}`, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
			imgUrl: 'http://szshg.a.xiaozhuschool.com/static/images/0243a65b40247dda658b843159c5d76.png', // 分享图标
			success: res => {},
			cancel: res => {
				vis.$toast('已取消')
			},
			fail: err => {alert(JSON.stringify(err))}
		})
		// 2.2 监听“分享到朋友圈”按钮点击、自定义分享内容及分享结果接口
		wx.onMenuShareTimeline({
			title: '一起加入新界零售吧！', // 分享标题
			link: `${baseApi}/h5/vue/#/personal/invite/join?id=${vis.userId}`, // 分享链接，该链接域名或路径必须与当前页面对应的公众号JS安全域名一致
			imgUrl: 'http://szshg.a.xiaozhuschool.com/static/images/0243a65b40247dda658b843159c5d76.png', // 分享图标
			success: res => {},
			cancel: res => {vis.$toast('已取消')},
			fail: err => {alert(JSON.stringify(err))}
		})
	})
